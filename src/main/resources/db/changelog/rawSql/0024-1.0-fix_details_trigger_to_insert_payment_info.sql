CREATE OR REPLACE FUNCTION CAZ_PAYMENT_AUDIT.entrant_master_detail() RETURNS TRIGGER AS $body$
DECLARE
    master_match INTEGER;
	master_id uuid;
	ep_latest boolean;
	payment_id_val uuid;
	central_reference bigint;
	payment_provider varchar(255);
BEGIN
	master_match := COUNT(*) FROM CAZ_PAYMENT_AUDIT.T_CLEAN_AIR_ZONE_PAYMENT_MASTER WHERE VRN = NEW.VRN AND CLEAN_AIR_ZONE_ID = NEW.CLEAN_AIR_ZONE_ID;
    IF (master_match IS NOT DISTINCT FROM 0) THEN
        INSERT INTO CAZ_PAYMENT_AUDIT.T_CLEAN_AIR_ZONE_PAYMENT_MASTER (CLEAN_AIR_ZONE_PAYMENT_MASTER_ID, VRN, CLEAN_AIR_ZONE_ID)
        VALUES (uuid_generate_v1mc(), NEW.VRN, NEW.CLEAN_AIR_ZONE_ID);
    END IF;
	SELECT CLEAN_AIR_ZONE_PAYMENT_MASTER_ID INTO master_id FROM CAZ_PAYMENT_AUDIT.T_CLEAN_AIR_ZONE_PAYMENT_MASTER WHERE VRN = NEW.VRN AND CLEAN_AIR_ZONE_ID = NEW.CLEAN_AIR_ZONE_ID;
	SELECT caz_epm.LATEST, caz_epm.PAYMENT_ID, pay.central_reference_number, pay.payment_provider_id
		INTO ep_latest, payment_id_val, central_reference, payment_provider
		FROM CAZ_PAYMENT.T_CLEAN_AIR_ZONE_ENTRANT_PAYMENT_MATCH caz_epm
		JOIN caz_payment.t_payment pay
		ON caz_epm.payment_id = pay.payment_id
 		WHERE caz_epm.CLEAN_AIR_ZONE_ENTRANT_PAYMENT_ID = NEW.CLEAN_AIR_ZONE_ENTRANT_PAYMENT_ID AND caz_epm.LATEST = true;
	INSERT INTO CAZ_PAYMENT_AUDIT.T_CLEAN_AIR_ZONE_PAYMENT_DETAIL (T_CLEAN_AIR_ZONE_PAYMENT_DETAIL_ID, CLEAN_AIR_ZONE_PAYMENT_MASTER_ID, TRAVEL_DATE, PAYMENT_STATUS, TARIFF_CODE, CHARGE, CASE_REFERENCE, UPDATE_ACTOR, ENTRANT_PAYMENT_INSERT_TIMESTAMP, ENTRANT_PAYMENT_UPDATE_TIMESTAMP, LATEST, PAYMENT_ID, CENTRAL_REFERENCE_NUMBER, PAYMENT_PROVIDER_ID )
		VALUES (uuid_generate_v1mc(), master_id, NEW.TRAVEL_DATE, NEW.PAYMENT_STATUS, NEW.TARIFF_CODE, NEW.CHARGE, NEW.CASE_REFERENCE, NEW.UPDATE_ACTOR, NEW.INSERT_TIMESTAMP, NEW.UPDATE_TIMESTAMP, ep_latest, payment_id_val, central_reference, payment_provider);
    RETURN NEW;

EXCEPTION
    WHEN data_exception THEN
        RAISE WARNING '[CAZ_PAYMENT_AUDIT.POPULATE_MASTER_FUNC] - UDF ERROR [DATA EXCEPTION] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
        RETURN NULL;
    WHEN unique_violation THEN
        RAISE WARNING '[CAZ_PAYMENT_AUDIT.POPULATE_MASTER_FUNC] - UDF ERROR [UNIQUE] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
        RETURN NULL;
    WHEN OTHERS THEN
        RAISE WARNING '[CAZ_PAYMENT_AUDIT.POPULATE_MASTER_FUNC] - UDF ERROR [OTHER] - SQLSTATE: %, SQLERRM: %',SQLSTATE,SQLERRM;
        RETURN NULL;
END;
$body$
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = pg_catalog, public, CAZ_PAYMENT_AUDIT;